<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JAVA on CUILAN</title>
    <link>https://cuilan.github.io/categories/java/</link>
    <description>Recent content in JAVA on CUILAN</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Sep 2019 16:00:00 +0000</lastBuildDate><atom:link href="https://cuilan.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dictionary抽象类源码分析</title>
      <link>https://cuilan.github.io/post/java/dictionary-source-analysis/</link>
      <pubDate>Tue, 17 Sep 2019 16:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/dictionary-source-analysis/</guid>
      <description>一、Dictionary特点或规范 Dictionary 抽象类形式上等同于一个接口，其全部方法都是抽象方法。它是 Hashtable 的父类，它将 键 映射到 值。每个键和每个值都是一个</description>
    </item>
    
    <item>
      <title>TreeMap源码分析</title>
      <link>https://cuilan.github.io/post/java/treemap-source-analysis/</link>
      <pubDate>Tue, 17 Sep 2019 12:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/treemap-source-analysis/</guid>
      <description>java.util.TreeMap 类继承了 java.util.AbstractMap 抽象类，实现了 java.util.NavigableMap、java.lang.Cloneable、java.io.Serial</description>
    </item>
    
    <item>
      <title>LinkedHashMap源码分析</title>
      <link>https://cuilan.github.io/post/java/linkedhashmap-source-analysis/</link>
      <pubDate>Sun, 15 Sep 2019 01:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/linkedhashmap-source-analysis/</guid>
      <description>java.util.LinkedHashMap 类继承了 java.util.HashMap 类，实现了 java.util.Map 接口。 LinkedHashMap继承关系 一、LinkedHashMap特点或规范 1.1 特点 java.util.LinkedHashMap 是 java.util.Map 接口的 链表 + 哈希 实现，具</description>
    </item>
    
    <item>
      <title>HashMap.TreeNode类源码分析</title>
      <link>https://cuilan.github.io/post/java/hashmap-treenode/</link>
      <pubDate>Wed, 11 Sep 2019 17:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/hashmap-treenode/</guid>
      <description>继承关系： java.util.Map.Entry Map 接口中的顶层实体接口。 java.util.HashMap.Node HashMap 中的单向链表节点。 java.util.LinkedHashMap.Entry LinkedHashMap 中的双向链表节点。 java.util.HashMap.TreeNode HashMap 中的红黑树节点。 TreeNode继承关系 一、HashMa</description>
    </item>
    
    <item>
      <title>HashMap源码分析</title>
      <link>https://cuilan.github.io/post/java/hashmap-source-analysis/</link>
      <pubDate>Tue, 03 Sep 2019 17:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/hashmap-source-analysis/</guid>
      <description>java.util.HashMap 类继承了 java.util.AbstractMap 抽象类，实现了 java.util.Map、java.lang.Cloneable、java.io.Serializable 接口。</description>
    </item>
    
    <item>
      <title>AbstractMap源码分析</title>
      <link>https://cuilan.github.io/post/java/abstractmap-source-analysis/</link>
      <pubDate>Mon, 02 Sep 2019 17:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/abstractmap-source-analysis/</guid>
      <description>java.util.AbstractMap 抽象类实现了 java.util.Map 接口。 AbstractMap接口继承关系 一、AbstractMap特点或规范 AbstractMap 抽象类提供了 Map 接口的基础实现，以最大限度地减少</description>
    </item>
    
    <item>
      <title>NavigableMap接口源码分析</title>
      <link>https://cuilan.github.io/post/java/navigablemap-source-analysis/</link>
      <pubDate>Wed, 28 Aug 2019 17:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/navigablemap-source-analysis/</guid>
      <description>java.util.NavigableMap 接口直接继承自 java.util.SortedMap 接口。 NavigableMap接口继承关系 一、NavigableMap特点或规范 NavigableMap 使用可导航的方法扩展了 SortedMap</description>
    </item>
    
    <item>
      <title>SortedMap接口源码分析</title>
      <link>https://cuilan.github.io/post/java/sortedmap-source-analysis/</link>
      <pubDate>Tue, 27 Aug 2019 23:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/sortedmap-source-analysis/</guid>
      <description>java.util.SortedMap 接口直接继承自 java.util.Map 接口。 SortedMap接口继承关系 一、SortedMap特点或规范 SortedMap 在 Map 的基础上进一步提供其 key 的总排序。 SortedMap 默认是根据其 key</description>
    </item>
    
    <item>
      <title>Map接口源码分析</title>
      <link>https://cuilan.github.io/post/java/map-source-analysis/</link>
      <pubDate>Wed, 21 Aug 2019 15:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/map-source-analysis/</guid>
      <description>java.util.Map 接口是双列集合的顶级接口。 一、Map特点或规范 双列集合，由 key 映射 value 的对象。 Map 不能包含重复的 key，且每个 key 只能映射一个 value。 Map 接口提</description>
    </item>
    
    <item>
      <title>AbstractQueue源码分析</title>
      <link>https://cuilan.github.io/post/java/abstractqueue-source-analysis/</link>
      <pubDate>Wed, 21 Aug 2019 11:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/abstractqueue-source-analysis/</guid>
      <description>java.util.AbstractQueue 类继承自 java.util.AbstractCollection 抽象类，实现了 java.util.Queue 接口。 AbstractQueue继承关系 一、AbstractQueue特点或规范 AbstractQueue 类提供 队列Queue 操作的基础</description>
    </item>
    
    <item>
      <title>TreeSet源码分析</title>
      <link>https://cuilan.github.io/post/java/treeset-source-analysis/</link>
      <pubDate>Tue, 20 Aug 2019 15:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/treeset-source-analysis/</guid>
      <description>java.util.TreeSet 类继承自 java.util.AbstractSet 抽象类，实现了 java.util.NavigableSet、java.lang.Cloneable、java.io.Serial</description>
    </item>
    
    <item>
      <title>LinkedHashSet源码分析</title>
      <link>https://cuilan.github.io/post/java/linkedhashset-source-analysis/</link>
      <pubDate>Mon, 19 Aug 2019 16:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/linkedhashset-source-analysis/</guid>
      <description>java.util.LinkedHashSet 类继承自 java.util.HashSet 抽象类，实现了 java.util.Set、java.lang.Cloneable、java.io.Serializable 接口。</description>
    </item>
    
    <item>
      <title>HashSet源码分析</title>
      <link>https://cuilan.github.io/post/java/hashset-source-analysis/</link>
      <pubDate>Mon, 19 Aug 2019 10:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/hashset-source-analysis/</guid>
      <description>java.util.HashSet 类继承自 java.util.AbstractSet 抽象类，实现了 java.util.Set、java.lang.Cloneable、java.io.Serializable 接口。</description>
    </item>
    
    <item>
      <title>AbstractSet源码分析</title>
      <link>https://cuilan.github.io/post/java/abstractset-source-analysis/</link>
      <pubDate>Fri, 16 Aug 2019 12:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/abstractset-source-analysis/</guid>
      <description>java.util.AbstractSet 抽象类继承自 java.util.AbstractCollection 抽象类，实现了 java.util.Set 接口。 AbstractSet继承关系 一、AbstractSet特点或规范 AbstractSet 类提供了 Set 接口的基础实现，以最大限</description>
    </item>
    
    <item>
      <title>AbstractSequentialList源码分析</title>
      <link>https://cuilan.github.io/post/java/abstractsequentiallist-source-analysis/</link>
      <pubDate>Fri, 09 Aug 2019 12:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/abstractsequentiallist-source-analysis/</guid>
      <description>java.util.AbstractSequentialList 抽象类继承自 java.util.AbstractList 抽象类。 AbstractSequentialList继承关系 一、AbstractSequentialList特点或规范 此类以</description>
    </item>
    
    <item>
      <title>Deque接口源码分析</title>
      <link>https://cuilan.github.io/post/java/deque-source-analysis/</link>
      <pubDate>Tue, 06 Aug 2019 12:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/deque-source-analysis/</guid>
      <description>java.util.Deque 接口直接继承自 java.util.Queue 接口。 Deque接口继承关系 一、Deque接口特点或规范 Deque 是线性集合，最大的特点是支持 两端插入、移除元素。Deque 是 &amp;ldquo;double ended</description>
    </item>
    
    <item>
      <title>Queue接口源码分析</title>
      <link>https://cuilan.github.io/post/java/queue-source-analysis/</link>
      <pubDate>Mon, 05 Aug 2019 18:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/queue-source-analysis/</guid>
      <description>java.util.Queue 接口直接继承自 java.util.Collection 接口。 Queue接口继承关系 一、Queue接口特点或规范 除了基本的 Collection 功能外，队列还提供额外的 插入，提取 和 检查 三组操作。其中</description>
    </item>
    
    <item>
      <title>NavigableSet接口源码分析</title>
      <link>https://cuilan.github.io/post/java/navigableset-source-analysis/</link>
      <pubDate>Thu, 01 Aug 2019 18:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/navigableset-source-analysis/</guid>
      <description>java.util.NavigableSet 接口直接继承自 java.util.SortedSet 接口。 NavigableSet接口继承关系 一、NavigableSet接口特点或规范 java.util.NavigableSet 接口在 java.util.SortedSet 基础上增加了导航功能，使用导</description>
    </item>
    
    <item>
      <title>SortedSet接口源码分析</title>
      <link>https://cuilan.github.io/post/java/sortedset-source-analysis/</link>
      <pubDate>Tue, 30 Jul 2019 23:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/sortedset-source-analysis/</guid>
      <description>java.util.SortedSet 接口直接继承自 java.util.Set 接口。 SortedSet接口继承关系 一、SortedSet接口特点或规范 实现规范 在 java.util.Set 基础上进一步提供其元素的总排序。元素按</description>
    </item>
    
    <item>
      <title>AbstractList源码分析</title>
      <link>https://cuilan.github.io/post/java/abstractlist-source-analysis/</link>
      <pubDate>Wed, 24 Jul 2019 10:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/abstractlist-source-analysis/</guid>
      <description>java.util.AbstractList 抽象类继承了 java.util.AbstractCollection 类，实现了 java.util.List 接口。 AbstractList继承关系 一、AbstractList类继承规范 随机访问性与顺序访问性规范 AbstractList 类提供了</description>
    </item>
    
    <item>
      <title>Set接口源码分析</title>
      <link>https://cuilan.github.io/post/java/set-source-analysis/</link>
      <pubDate>Thu, 18 Jul 2019 15:55:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/set-source-analysis/</guid>
      <description>java.util.Set 接口直接继承自 java.util.Collection 接口。 Set接口继承关系 一、Set接口特点或规范 不包含重复元素。至多一个 null 元素。数学意义的集合。 全部方法都继承自 java.util.Collection 接口。 子</description>
    </item>
    
    <item>
      <title>AbstractCollection源码分析</title>
      <link>https://cuilan.github.io/post/java/abstractcollection-source-analysis/</link>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/abstractcollection-source-analysis/</guid>
      <description>java.util.AbstractCollection 抽象类实现了 java.util.Collection 接口。 AbstractCollection继承关系 一、AbstractCollection类继承规范 AbstractCollection 抽象类提供了 Collection 接口的骨</description>
    </item>
    
    <item>
      <title>List接口源码分析</title>
      <link>https://cuilan.github.io/post/java/list-source-analysis/</link>
      <pubDate>Wed, 17 Jul 2019 15:34:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/list-source-analysis/</guid>
      <description>java.util.List 接口直接继承自 java.util.Collection 接口，在 Collection 接口的功能之上添加了 List 功能特有的接口规范。 List接口继承关系 一、List接口特点 有序集合。 该接口的子类实现可以</description>
    </item>
    
    <item>
      <title>Collection接口源码分析</title>
      <link>https://cuilan.github.io/post/java/collection-source-analysis/</link>
      <pubDate>Mon, 15 Jul 2019 11:02:00 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/collection-source-analysis/</guid>
      <description>java.util.Collection 接口是单列集合层次结构中的 根接口。集合表示 一组对象，称为其 元素。其有些子类集合允许重复元素，有些其他集合则不允许。有些是有序的，有些是无序</description>
    </item>
    
    <item>
      <title>Iterable接口源码分析</title>
      <link>https://cuilan.github.io/post/java/iterable-source-analysis/</link>
      <pubDate>Fri, 12 Jul 2019 10:18:22 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/iterable-source-analysis/</guid>
      <description>实现此接口的对象成为“for-each loop”语句的目标，即具有可迭代功能。 Iterable 接口在 java.lang 包下，java.util.Collection 接口实</description>
    </item>
    
    <item>
      <title>Java集合框架源码分析</title>
      <link>https://cuilan.github.io/post/java/javacollectionsframework/</link>
      <pubDate>Fri, 12 Jul 2019 16:31:00 +0800</pubDate>
      
      <guid>https://cuilan.github.io/post/java/javacollectionsframework/</guid>
      <description>一、接口 单列集合接口 java.lang.Iterable java.util.Collection java.util.List java.util.Set java.util.SortedSet java.util.NavigableSet java.util.Queue java.util.Deque 双列集合接口 java.util.Map java.util.SortedMap java.util.NavigableMap 二、抽象类/类，继承关系，实现接口 单列集合类 java.util.AbstractCollection java.util.AbstractList java.util.ArrayList java.util.AbstractSequentialList java.util.LinkedList java.util.Vector java.util.Stack java.util.AbstractSet java.util.HashSet java.util.LinkedHashSet java.util.TreeSet java.util.AbstractQueue java.util.ArrayDeque 双列集合类 java.util.AbstractMap java.util.HashMap java.util.LinkedHashMap</description>
    </item>
    
    <item>
      <title>Java对象头详解</title>
      <link>https://cuilan.github.io/post/java/java-object-head/</link>
      <pubDate>Fri, 15 Mar 2019 11:23:51 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/java-object-head/</guid>
      <description>由于Java面向对象的思想，在JVM中需要大量存储对象，存储时为了实现一些额外的功能，需要在对象中添加一些标记字段用于增强对象功能，这些标记</description>
    </item>
    
    <item>
      <title>LinkedList源码分析</title>
      <link>https://cuilan.github.io/post/java/linked-list-source-analysis/</link>
      <pubDate>Thu, 06 Dec 2018 23:10:05 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/linked-list-source-analysis/</guid>
      <description>一、LinkedList简介二、成员分析三、链表实现四、双端队列实现五、队列实现六、栈实现七、列表实现八、迭代器、分割器一、LinkedLi</description>
    </item>
    
    <item>
      <title>ArrayList源码分析</title>
      <link>https://cuilan.github.io/post/java/array-list-source-analysis/</link>
      <pubDate>Thu, 15 Nov 2018 22:26:53 +0000</pubDate>
      
      <guid>https://cuilan.github.io/post/java/array-list-source-analysis/</guid>
      <description>ArrayList应该算是日常开发中使用最多的List实现类。 一、ArrayList 的特性 有序 可重复 线程不安全 允许插入 null 值 查询快、增删慢 底层</description>
    </item>
    
  </channel>
</rss>
